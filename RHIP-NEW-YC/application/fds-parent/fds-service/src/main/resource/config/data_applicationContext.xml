<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
           http://www.springframework.org/schema/task 
           http://www.springframework.org/schema/task/spring-task-3.0.xsd
           http://www.springframework.org/schema/mvc 
           http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd  
           http://www.springframework.org/schema/context   
           http://www.springframework.org/schema/context/spring-context-3.0.xsd   
           http://www.springframework.org/schema/tx   
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd   
           http://www.springframework.org/schema/jdbc   
           http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           " default-autowire="byName" default-lazy-init="true">

    <aop:aspectj-autoproxy/>

    <context:annotation-config/>
    <context:component-scan base-package="com.founder.fasf.*"></context:component-scan>
    <context:component-scan base-package="com.founder.elb.*"></context:component-scan>
    <context:component-scan base-package="com.founder.rhip.*"></context:component-scan>

    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:config/common.properties</value>
            </list>
        </property>
    </bean>

    <!--JTA事务管理器-->
    <bean id="txManager" class="org.springframework.transaction.jta.JtaTransactionManager">  
	    <property name="transactionManager">  
	        <bean class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close">  
	            <property name="forceShutdown" value="true"/>
	        </bean>
	    </property>  
	    <property name="userTransaction">  
	        <bean class="com.atomikos.icatch.jta.UserTransactionImp">
                <property name="transactionTimeout" value="${jdbc.transactionTimeout}"/>
            </bean>
	    </property>  
	    <!-- <property name="allowCustomIsolationLevels" value="true"/> -->
	</bean>

    <!--默认JDBCTemplate -->
    <bean id="defaultJDBCTemplate" class="com.founder.fasf.aop.DefaultJDBCTemplate" >
        <property name="name" value="meiddbJDBCTemplate" />
    </bean>


    <!-- 疾病管理 Spring JDBC模板 -->
    <bean id="dataSourceRdmdb" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
        <property name="uniqueResourceName" value="dataSourceRdmdb"/>
        <property name="xaDataSourceClassName" value="oracle.jdbc.xa.client.OracleXADataSource"/>
        <property name="xaProperties">
            <props>
                <prop key="URL">${jdbc.url.a}</prop>
                <prop key="user">${jdbc.username.a}</prop>
                <prop key="password">${jdbc.password.a}</prop>
            </props>
        </property>
        <property name="minPoolSize" value="${jdbc.minPoolSize}" />
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
        <property name="testQuery" value="select 1 from dual" />
    </bean>

    <bean id="rdmdbJDBCTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
        <constructor-arg>
            <ref bean="dataSourceRdmdb" />
        </constructor-arg>
    </bean>

    <!-- 主索引库 Spring JDBC模板 -->
    <bean id="dataSourceMeiddb" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
        <property name="uniqueResourceName" value="dataSourceMeiddb"/>
        <property name="xaDataSourceClassName" value="oracle.jdbc.xa.client.OracleXADataSource"/>
        <property name="xaProperties">
            <props>
                <prop key="URL">${jdbc.url.b}</prop>
                <prop key="user">${jdbc.username.b}</prop>
                <prop key="password">${jdbc.password.b}</prop>
            </props>
        </property>
        <property name="minPoolSize" value="${jdbc.minPoolSize}" />
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
        <property name="testQuery" value="select 1 from dual" />
    </bean>

    <bean id="meiddbJDBCTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
        <constructor-arg>
            <ref bean="dataSourceMeiddb" />
        </constructor-arg>
    </bean>

    <!--  医疗服务 Spring JDBC模板-->
    <bean id="dataSourceRmsdb" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
        <property name="uniqueResourceName" value="dataSourceRmsdb"/>
        <property name="xaDataSourceClassName" value="oracle.jdbc.xa.client.OracleXADataSource"/>
        <property name="xaProperties">
            <props>
                <prop key="URL">${jdbc.url.c}</prop>
                <prop key="user">${jdbc.username.c}</prop>
                <prop key="password">${jdbc.password.c}</prop>
            </props>
        </property>
        <property name="minPoolSize" value="${jdbc.minPoolSize}" />
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
        <property name="testQuery" value="select 1 from dual" />
    </bean>

    <bean id="rmsdbJDBCTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
        <constructor-arg>
            <ref bean="dataSourceRmsdb" />
        </constructor-arg>
    </bean>

    <!-- 健康门户 Spring JDBC模板 -->
    <bean id="dataSourcePORTAL" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
        <property name="uniqueResourceName" value="dataSourcePORTAL"/>
        <property name="xaDataSourceClassName" value="oracle.jdbc.xa.client.OracleXADataSource"/>
        <property name="xaProperties">
            <props>
                <prop key="URL">${jdbc.url.p}</prop>
                <prop key="user">${jdbc.username.p}</prop>
                <prop key="password">${jdbc.password.p}</prop>
            </props>
        </property>
        <property name="minPoolSize" value="${jdbc.minPoolSize}" />
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
        <property name="testQuery" value="select 1 from dual" />
    </bean>

    <bean id="portalJDBCTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
        <constructor-arg>
            <ref bean="dataSourcePORTAL" />
        </constructor-arg>
    </bean>

    <!-- 数据源的mdm Spring JDBC模板 -->
    <bean id="dataSourceMDM" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
        <property name="uniqueResourceName" value="dataSourceMDM"/>
        <property name="xaDataSourceClassName" value="oracle.jdbc.xa.client.OracleXADataSource"/>
        <property name="xaProperties">
            <props>
                <prop key="URL">${jdbc.url.d}</prop>
                <prop key="user">${jdbc.username.d}</prop>
                <prop key="password">${jdbc.password.d}</prop>
            </props>
        </property>
        <property name="minPoolSize" value="${jdbc.minPoolSize}" />
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
        <property name="testQuery" value="select 1 from dual" />
    </bean>

    <bean id="mdmJDBCTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
        <constructor-arg>
            <ref bean="dataSourceMDM" />
        </constructor-arg>
    </bean>

    <!-- 数据源的pcb Spring JDBC模板 -->
    <bean id="dataSourcePCBMDB" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
        <property name="uniqueResourceName" value="dataSourcePCBMDB"/>
        <property name="xaDataSourceClassName" value="oracle.jdbc.xa.client.OracleXADataSource"/>
        <property name="xaProperties">
            <props>
                <prop key="URL">${jdbc.url.e}</prop>
                <prop key="user">${jdbc.username.e}</prop>
                <prop key="password">${jdbc.password.e}</prop>
            </props>
        </property>
        <property name="minPoolSize" value="${jdbc.minPoolSize}" />
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
        <property name="testQuery" value="select 1 from dual" />
    </bean>

    <bean id="pcbJDBCTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
        <constructor-arg>
            <ref bean="dataSourcePCBMDB" />
        </constructor-arg>
    </bean>

    <!-- 疾病管理 Spring JDBC模板 -->
    <bean id="dataSourceDMD" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
        <property name="uniqueResourceName" value="dataSourceDMD"/>
        <property name="xaDataSourceClassName" value="oracle.jdbc.xa.client.OracleXADataSource"/>
        <property name="xaProperties">
            <props>
                <prop key="URL">${jdbc.url.f}</prop>
                <prop key="user">${jdbc.username.f}</prop>
                <prop key="password">${jdbc.password.f}</prop>
            </props>
        </property>
        <property name="minPoolSize" value="${jdbc.minPoolSize}" />
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
        <property name="testQuery" value="select 1 from dual" />
    </bean>

    <bean id="dmdJDBCTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
        <constructor-arg>
            <ref bean="dataSourceDMD" />
        </constructor-arg>
    </bean>

    <!-- 疾病控制 Spring JDBC模板 -->
    <bean id="dataSourceDCD" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
        <property name="uniqueResourceName" value="dataSourceDCD"/>
        <property name="xaDataSourceClassName" value="oracle.jdbc.xa.client.OracleXADataSource"/>
        <property name="xaProperties">
            <props>
                <prop key="URL">${jdbc.url.h}</prop>
                <prop key="user">${jdbc.username.h}</prop>
                <prop key="password">${jdbc.password.h}</prop>
            </props>
        </property>
        <property name="minPoolSize" value="${jdbc.minPoolSize}" />
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
        <property name="testQuery" value="select 1 from dual" />
    </bean>

    <bean id="dcdJDBCTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
        <constructor-arg>
            <ref bean="dataSourceDCD" />
        </constructor-arg>
    </bean>

    <!-- 妇女儿童  Spring JDBC模板  -->
    <bean id="dataSourceWHCH" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
        <property name="uniqueResourceName" value="dataSourceWHCH"/>
        <property name="xaDataSourceClassName" value="oracle.jdbc.xa.client.OracleXADataSource"/>
        <property name="xaProperties">
            <props>
                <prop key="URL">${jdbc.url.g}</prop>
                <prop key="user">${jdbc.username.g}</prop>
                <prop key="password">${jdbc.password.g}</prop>
            </props>
        </property>
        <property name="minPoolSize" value="${jdbc.minPoolSize}" />
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
        <property name="testQuery" value="select 1 from dual" />
    </bean>

    <bean id="whchJDBCTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
        <constructor-arg>
            <ref bean="dataSourceWHCH" />
        </constructor-arg>
    </bean>

    <!-- 综合管理 Spring JDBC模板 -->
    <bean id="dataSourceIHM" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
        <property name="uniqueResourceName" value="dataSourceIHM"/>
        <property name="xaDataSourceClassName" value="oracle.jdbc.xa.client.OracleXADataSource"/>
        <property name="xaProperties">
            <props>
                <prop key="URL">${jdbc.url.i}</prop>
                <prop key="user">${jdbc.username.i}</prop>
                <prop key="password">${jdbc.password.i}</prop>
            </props>
        </property>
        <property name="minPoolSize" value="${jdbc.minPoolSize}" />
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
        <property name="testQuery" value="select 1 from dual" />
    </bean>

    <bean id="ihmJDBCTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
        <constructor-arg>
            <ref bean="dataSourceIHM" />
        </constructor-arg>
    </bean>

    <!-- 数据源的集成数据监控 Spring JDBC模板 -->
    <bean id="dataSourceIntegrateMonitor" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
        <property name="uniqueResourceName" value="dataSourceIntegrateMonitor"/>
        <property name="xaDataSourceClassName" value="oracle.jdbc.xa.client.OracleXADataSource"/>
        <property name="xaProperties">
            <props>
                <prop key="URL">${jdbc.url.m}</prop>
                <prop key="user">${jdbc.username.m}</prop>
                <prop key="password">${jdbc.password.m}</prop>
            </props>
        </property>
        <property name="minPoolSize" value="${jdbc.minPoolSize}" />
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
        <property name="testQuery" value="select 1 from dual" />
    </bean>


    <bean id="integrateMonitorJDBCTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
        <constructor-arg>
            <ref bean="dataSourceIntegrateMonitor" />
        </constructor-arg>
    </bean>
    

     <tx:annotation-driven transaction-manager="txManager"/>

    <!-- ======================   缓存   ======================= -->
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation">
            <value>classpath:config/ehcache.xml</value>
        </property>
    </bean>
    <bean id="ehCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
        <property name="cacheName">
            <value>DEFAULT_CACHE</value>
        </property>
        <property name="cacheManager" ref="cacheManager"/>
    </bean>

</beans>