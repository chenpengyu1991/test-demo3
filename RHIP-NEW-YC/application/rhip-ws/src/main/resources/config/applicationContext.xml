<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:http-conf="http://cxf.apache.org/transports/http/configuration"
       xsi:schemaLocation="http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd

		http://cxf.apache.org/transports/http/configuration http://cxf.apache.org/schemas/configuration/http-conf.xsd">
	<http-conf:conduit name="{http://impl.service.product.super.com/}ProjectService.http-conduit">
        <http-conf:client ConnectionTimeout="300000" ReceiveTimeout="600000"/>
    </http-conf:conduit>
	<import resource="classpath:META-INF/cxf/cxf.xml"/>
	<import resource="classpath:META-INF/cxf/cxf-extension-soap.xml"/>
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml"/>

	 <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"></constructor-arg>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <aop:aspectj-autoproxy/>

    <mvc:annotation-driven validator="validator"/>
    <!-- 以下 validator  ConversionService 在使用 mvc:annotation-driven 会 自动注册-->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
    </bean>

    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter"/>
            </list>
        </property>
    </bean>

    <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <context:component-scan base-package="com.founder.rhip.portal.controller"/>
    <context:annotation-config/>
    <context:component-scan base-package="com.founder.fasf.*"></context:component-scan>
    <context:component-scan base-package="com.founder.elb.*"></context:component-scan>
    <context:component-scan base-package="com.founder.rhip.*"></context:component-scan>

 	<bean class="org.springframework.web.servlet.handler.MappedInterceptor">
        <constructor-arg name="includePatterns" >
        	<array>
        		<value>/**/*</value>
        	</array>
        </constructor-arg>
        <constructor-arg name="interceptor" ref="localeChangeInterceptor"/>
    </bean>
    <bean  class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>

    <bean id="localeChangeInterceptor"  class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>

    <!-- 可以使用${}在页面或Bean、配置文件中获取config下properties下的文件-->
    <context:property-placeholder location="classpath:config/*.properties"/>

    <!--默认JDBCTemplate -->
    <bean id="defaultJDBCTemplate" class="com.founder.fasf.aop.DefaultJDBCTemplate" >
        <property name="name" value="phbdbJDBCTemplate" />
    </bean>

    <!-- druid 公卫平台业务数据库数据源配置 START-->
    <bean id="dataSourcePhbdb" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url.a}" />
        <property name="username" value="${jdbc.username.a}"/>
        <property name="password" value="${jdbc.password.a}" />

        <property name="filters" value="${filters}"/>

	     <property name="maxActive" value="${maxActive}"/>
	     <property name="initialSize" value="${initialSize}"/>
	     <property name="maxWait" value="${maxWait}"/>
	     <property name="minIdle" value="${minIdle}"/>

	     <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}"/>
	     <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}"/>

	     <property name="validationQuery" value="SELECT 'x' FROM DUAL"/>
	     <property name="testWhileIdle" value="${testWhileIdle}"/>
	     <property name="testOnBorrow" value="${testOnBorrow}" />
	     <property name="testOnReturn" value="${testOnReturn}"/>

	     <property name="poolPreparedStatements" value="${poolPreparedStatements}"/>
	     <property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}"/>
    </bean>

    <!-- 公务平台业务数据库事务管理器 -->
    <bean id="transactionManagera" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSourcePhbdb" />
        <qualifier value="transmb" />
    </bean>

    <!-- 全注解方式   需加上@Transactional -->
    <tx:annotation-driven transaction-manager="transactionManagera" />


    <bean id="phbdbJDBCTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
        <constructor-arg>
            <ref bean="dataSourcePhbdb" />
        </constructor-arg>
    </bean>
    <!-- druid 公卫平台业务数据库数据源配置 END-->

    <!-- druid 医疗服务数据库数据源配置 START-->
    <bean id="dataSourceMsdb" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url.b}" />
        <property name="username" value="${jdbc.username.b}"/>
        <property name="password" value="${jdbc.password.b}" />

        <property name="filters" value="${filters}"/>

	     <property name="maxActive" value="${maxActive}"/>
	     <property name="initialSize" value="${initialSize}"/>
	     <property name="maxWait" value="${maxWait}"/>
	     <property name="minIdle" value="${minIdle}"/>

	     <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}"/>
	     <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}"/>

	     <property name="validationQuery" value="SELECT 'x' FROM DUAL"/>
	     <property name="testWhileIdle" value="${testWhileIdle}"/>
	     <property name="testOnBorrow" value="${testOnBorrow}" />
	     <property name="testOnReturn" value="${testOnReturn}"/>

	     <property name="poolPreparedStatements" value="${poolPreparedStatements}"/>
	     <property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}"/>
    </bean>

    <!-- 医疗服务库事务管理器 -->
    <bean id="transactionManagerb" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSourceMsdb" />
        <qualifier value="transme" />
    </bean>

    <!-- 全注解方式   需加上@Transactional -->
    <tx:annotation-driven transaction-manager="transactionManagerb" />

    <bean id="msdbJDBCTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
        <constructor-arg>
            <ref bean="dataSourceMsdb" />
        </constructor-arg>
    </bean>
    <!-- druid 医疗服务数据库数据源配置 END-->

    <!-- druid 健康门户数据库数据源配置 START-->
    <bean id="dataSourcePortaldb" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url.c}" />
        <property name="username" value="${jdbc.username.c}"/>
        <property name="password" value="${jdbc.password.c}" />

         <property name="filters" value="${filters}"/>

	     <property name="maxActive" value="${maxActive}"/>
	     <property name="initialSize" value="${initialSize}"/>
	     <property name="maxWait" value="${maxWait}"/>
	     <property name="minIdle" value="${minIdle}"/>

	     <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}"/>
	     <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}"/>

	     <property name="validationQuery" value="SELECT 'x' FROM DUAL"/>
	     <property name="testWhileIdle" value="${testWhileIdle}"/>
	     <property name="testOnBorrow" value="${testOnBorrow}" />
	     <property name="testOnReturn" value="${testOnReturn}"/>

	     <property name="poolPreparedStatements" value="${poolPreparedStatements}"/>
	     <property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}"/>
    </bean>

    <!-- 健康门户数据库库事务管理器 -->
    <bean id="transactionManagerc"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSourcePortaldb" />
        <qualifier value="transmd" />
    </bean>

    <!-- 全注解方式   需加上@Transactional -->
    <tx:annotation-driven transaction-manager="transactionManagerc" />

    <bean id="portaldbJDBCTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
        <constructor-arg>
            <ref bean="dataSourcePortaldb" />
        </constructor-arg>
    </bean>
    <!-- druid 健康门户数据库数据源配置 END-->


    <bean id="queryJdbcTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
        <constructor-arg ref="dataSourcePhbdb"/>
    </bean>


    <!-- ======================   缓存   ======================= -->
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation">
            <value>classpath:config/ehcache.xml</value>
        </property>
    </bean>
    <bean id="ehCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
        <property name="cacheName">
            <value>DEFAULT_CACHE</value>
        </property>
        <property name="cacheManager" ref="cacheManager"/>
    </bean>


	<!--合并镇的监听  -->
    <bean id="mergerTownLstenerManager" class="com.founder.rhip.mdm.service.MergerTownListenerManager">
        <property name="mergerTownListeners">
            <list>
                <ref bean="mdmOrganizationService"/>
            </list>
        </property>
    </bean>

    <!--合并机构的监听  -->
    <bean id="mergerOrgListenerManager" class="com.founder.rhip.mdm.service.MergerOrganizationListenerManager">
    </bean>

	<jaxws:endpoint implementor="#whchWebService" address="/whchWebService" publish="true" >
	</jaxws:endpoint>
	<jaxws:endpoint implementor="#chargetItemDOCService" address="/chargeItemWebService" publish="true" >
	</jaxws:endpoint>
	<jaxws:endpoint implementor="#personWebService" address="/personWebService" publish="true" >
	</jaxws:endpoint>
	<jaxws:endpoint implementor="#personInfoService" address="/commonService" publish="true" >
	</jaxws:endpoint>
	<jaxws:endpoint implementor="#followupWebService" address="/followupWebService" publish="true" >
	</jaxws:endpoint>
	<jaxws:endpoint implementor="#dmDiseaseWebService" address="/dmDiseaseWebService" publish="true" >
	</jaxws:endpoint>
	<jaxws:endpoint implementor="#reserveWebService" address="/reserveWebService" publish="true" >
	</jaxws:endpoint>
	<jaxws:endpoint implementor="#locationWebService" address="/locationWebService" publish="true" >
	</jaxws:endpoint>
	<jaxws:endpoint implementor="#cicCardWebService" address="/cicCardWebService" publish="true" >
	</jaxws:endpoint>
	<jaxws:endpoint implementor="#cicHealthWebService" address="/cicHealthWebService" publish="true" >
	</jaxws:endpoint>
    <jaxws:endpoint implementor="#ncWebService" address="/ncWebService" publish="true" >
    </jaxws:endpoint>
    <jaxws:endpoint implementor="#hisWebService" address="/hisWebService" publish="true" >
	</jaxws:endpoint>
	<jaxws:endpoint implementor="#referralWebService" address="/referralWebService" publish="true" >
	</jaxws:endpoint>
	<jaxws:endpoint implementor="#sickbedStateWebService" address="/sickbedStateWebService" publish="true" >
	</jaxws:endpoint>
	<jaxws:endpoint implementor="#rdWebService" address="/rdWebService" publish="true" >
    </jaxws:endpoint>
    <jaxws:endpoint implementor="#msWebService" address="/msWebService" publish="true">
    </jaxws:endpoint>
    <jaxws:endpoint implementor="#yiTiJiWebService" address="/yiTiJiWebService" publish="true">
    </jaxws:endpoint>
    <jaxws:endpoint implementor="#appTzbsWebService" address="/appTzbsWebService" publish="true" >
    </jaxws:endpoint>
</beans>